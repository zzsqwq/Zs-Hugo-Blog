<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>dp on Zs&#39;s Blog</title>
    <link>https://blog.zzsqwq.cn/tags/dp/</link>
    <description>Recent content in dp on Zs&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 20 Feb 2020 01:04:00 +0000</lastBuildDate><atom:link href="https://blog.zzsqwq.cn/tags/dp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>树形dp例题</title>
      <link>https://blog.zzsqwq.cn/posts/31/</link>
      <pubDate>Thu, 20 Feb 2020 01:04:00 +0000</pubDate>
      
      <guid>https://blog.zzsqwq.cn/posts/31/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;学OI的时候就做过树形dp的题，不过那时候全在划水。看了看题解还不太懂就直接照着题解写了，现在再回来看还是不会QAQ，所以就再看看然后自己写了一遍。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dp练习</title>
      <link>https://blog.zzsqwq.cn/posts/29/</link>
      <pubDate>Tue, 18 Feb 2020 01:00:00 +0000</pubDate>
      
      <guid>https://blog.zzsqwq.cn/posts/29/</guid>
      <description>&lt;h2 id=&#34;a-矩阵取数游戏httpswwwluogucomcnproblemp1005&#34;&gt;A. &lt;a href=&#34;https://www.luogu.com.cn/problem/P1005&#34;&gt;矩阵取数游戏&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;题意&#34;&gt;题意&lt;/h3&gt;
&lt;p&gt;给定一个 $n\times m$ 的矩阵，其中每个元素为非负整数。每次你可以从每行的行首或行末取一个元素，得到的分数为当前元素的值 $a_{ij}\times 2^k$  ，$k$ 为当前是第几次取该行上的元素。 问最大得分为多少。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dp习题练习</title>
      <link>https://blog.zzsqwq.cn/posts/24/</link>
      <pubDate>Wed, 12 Feb 2020 00:45:00 +0000</pubDate>
      
      <guid>https://blog.zzsqwq.cn/posts/24/</guid>
      <description>&lt;h2 id=&#34;a-方格取数httpswwwluogucomcnproblemp1004&#34;&gt;A. &lt;a href=&#34;https://www.luogu.com.cn/problem/P1004&#34;&gt;方格取数&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&#34;题意&#34;&gt;题意&lt;/h3&gt;
&lt;p&gt;有一个 $N*N$ 的整数方阵，每个点初始值为0，在一些点上放上数，一个人从左上角走到右下角，规定只能向下或向右走，当他经过的点上有数时会取走它，问走两遍最多能取的数的和最大为多少。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>背包进阶</title>
      <link>https://blog.zzsqwq.cn/posts/21/</link>
      <pubDate>Sun, 09 Feb 2020 00:38:00 +0000</pubDate>
      
      <guid>https://blog.zzsqwq.cn/posts/21/</guid>
      <description>&lt;h3 id=&#34;1-分组背包httpswwwluogucomcnproblemp1757&#34;&gt;1. &lt;a href=&#34;https://www.luogu.com.cn/problem/P1757&#34;&gt;分组背包&lt;/a&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;h4 id=&#34;题意&#34;&gt;题意&lt;/h4&gt;
&lt;p&gt;在01背包基础上，将其中的物体分成 $k$ 组，每组内的物品相互冲突，即只能取其中一个，问最大价值。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一些关于背包的题</title>
      <link>https://blog.zzsqwq.cn/posts/20/</link>
      <pubDate>Sat, 08 Feb 2020 00:33:00 +0000</pubDate>
      
      <guid>https://blog.zzsqwq.cn/posts/20/</guid>
      <description>&lt;h3 id=&#34;前言&#34;&gt;前言&lt;/h3&gt;
&lt;p&gt;今天跟着背包九讲把背包再学习一下，dd_engi大佬的背包九讲Github链接: &lt;a href=&#34;https://github.com/tianyicui/pack&#34;&gt;背包九讲&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;1-采药01背包httpswwwluogucomcnproblemp1048&#34;&gt;1. &lt;a href=&#34;https://www.luogu.com.cn/problem/P1048&#34;&gt;采药(01背包)&lt;/a&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;h4 id=&#34;题意&#34;&gt;题意&lt;/h4&gt;
&lt;p&gt;有 $n$ 个价值为 $w_i$ ，体积为 $v_i$ 的物品，装入体积为 $V$ 的背包中，问能获得的最大为多少。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>基础线性dp例题 #2</title>
      <link>https://blog.zzsqwq.cn/posts/19/</link>
      <pubDate>Fri, 07 Feb 2020 00:22:00 +0000</pubDate>
      
      <guid>https://blog.zzsqwq.cn/posts/19/</guid>
      <description>&lt;h3 id=&#34;1-石子归并httpswww51nodcomchallengeproblemhtmlproblemid1021&#34;&gt;1. &lt;a href=&#34;https://www.51nod.com/Challenge/Problem.html#problemId=1021&#34;&gt;石子归并&lt;/a&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;h4 id=&#34;题意&#34;&gt;题意&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;$N$ 堆石子摆成一条线。现要将石子有次序地合并成一堆。规定每次只能选相邻的2堆石子合并成新的一堆，并将新的一堆石子数记为该次合并的代价。计算将 $N$ 堆石子合并成一堆的最小代价。
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h4 id=&#34;思路&#34;&gt;思路&lt;/h4&gt;
&lt;p&gt;很经典的区间dp例题，我们可以用 $dp[i][j]$ 来表示合并 $i\sim j$ 所需的最小代价，通过枚举中间的断点，来通过方程 $dp[i][j]=min(dp[i][j],dp[i][k]+dp[k+1][j]+cost[i][j])$  ，其中 $cost[i][j]$ 表示从 $i\sim j$ 的石子总数，通过前缀和很容易计算。在进行状态转移时需要前面状态已知，因为是枚举中间断点，所以断开区间的长度一定要小于原区间，因此在转移之前需要确保比他短的区间都已经达到了最小代价，因此我们可以通过枚举区间长度从 $2\sim N$ 来实现。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>基础线性dp例题</title>
      <link>https://blog.zzsqwq.cn/posts/18/</link>
      <pubDate>Thu, 06 Feb 2020 00:09:00 +0000</pubDate>
      
      <guid>https://blog.zzsqwq.cn/posts/18/</guid>
      <description>&lt;h3 id=&#34;前言&#34;&gt;前言&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;某位大佬曾经说过，dp不会没问题，想不到状态转移方程没问题，多做题就会了。所以，我打算多刷点dp题。那么，先从基础刷起吧。&lt;/p&gt;
&lt;h3 id=&#34;1-p1091-合唱队形httpswwwluogucomcnproblemp1091&#34;&gt;1. &lt;a href=&#34;https://www.luogu.com.cn/problem/P1091&#34;&gt;P1091 合唱队形&lt;/a&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;h4 id=&#34;题意&#34;&gt;题意&lt;/h4&gt;
&lt;p&gt;已知序列 $a$ 有 $n$ 个数，通过取出其中一些数可以使他满足严格的先增再减序列，问最少取出几个。&lt;/p&gt;
&lt;hr&gt;</description>
    </item>
    
  </channel>
</rss>
