<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Zs's Blog</title><link>https://zzsqwq.github.io/tags/python/</link><description>Recent content in Python on Zs's Blog</description><generator>Hugo -- gohugo.io</generator><language>cn</language><lastBuildDate>Sun, 16 May 2021 15:19:00 +0000</lastBuildDate><atom:link href="https://zzsqwq.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>利用神经网络进行波士顿房价预测</title><link>https://zzsqwq.github.io/posts/182/</link><pubDate>Sun, 16 May 2021 15:19:00 +0000</pubDate><guid>https://zzsqwq.github.io/posts/182/</guid><description>前言 ​ 前一阵学校有五一数模节校赛，和朋友一起参加做B题，波士顿房价预测，算是第一次自己动手实现一个简单的小网络吧，虽然很简单，但还是想记录一下。
题目介绍 ​ 波士顿住房数据由哈里森和鲁宾菲尔德于1978年Harrison and Rubinfeld1收集。它包括了波士顿大区每个调查行政区的506个观察值。1980年Belsley et al.2曾对此数据做过分析。
​ 数据一共14列，每一列的含义分别如下：
英文简称 详细含义 CRIM 城镇的人均犯罪率 ZN 大于25,000平方英尺的地块的住宅用地比例。 INDUS 每个镇的非零售业务英亩的比例。 CHAS 查尔斯河虚拟变量（如果环河，则等于1；否则等于0） NOX 一氧化氮的浓度（百万分之几） RM 每个住宅的平均房间数 AGE 1940年之前建造的自有住房的比例 DIS 到五个波士顿就业中心的加权距离 RAD 径向公路通达性的指标 TAX 每一万美元的全值财产税率 PTRATIO 各镇的师生比率 B 计算方法为 $1000(B_k-0.</description></item><item><title>关于Anaconda中pip路径指向问题</title><link>https://zzsqwq.github.io/posts/169/</link><pubDate>Sat, 06 Mar 2021 20:51:00 +0000</pubDate><guid>https://zzsqwq.github.io/posts/169/</guid><description>前言 ​ 最近使用Anaconda的时候遇到了一个很奇怪的问题，如当我新建环境 condatest 后，使用 pip -V 查看pip的路径指向，会发现pip指向的是另一个环境 CenterNet 的路径。搜索了很久得到一个有一些用的解决方法
解决方案 ​ 设有问题的环境为 condatest ，python版本为 3.6
​ 然后进入 ~/anaconda3/envs/condatest/lib/python3.6
​ 编辑目录下的 site.py 文件，将其中的 USER_SITE 的值修改为 /home/zs/anaconda3/envs/condatest ，注意这里路径里面的 zs 是你的当前用户名， USER_BASE 的值修改为 /home/zs/anaconda3/envs/condatest/lib/python3.6/site.py，然后问题应该就解决了。
​ 因为如果环境问题的话，上面两个字符串都为空，猜测的原因是因为有同python版本的环境导致默认指向错误，此方式为修改conda中pip的指向。
参考链接 更改conda环境中的pip包安装的默认路径</description></item><item><title>Python初步学习</title><link>https://zzsqwq.github.io/posts/66/</link><pubDate>Sat, 18 Apr 2020 01:24:00 +0000</pubDate><guid>https://zzsqwq.github.io/posts/66/</guid><description>&lt;h1 id="python学习笔记">
Python学习笔记
&lt;a class="heading-link" href="#python%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0">
&lt;i class="fa fa-link" aria-hidden="true">&lt;/i>
&lt;/a>
&lt;/h1>
&lt;h2 id="python的不同解释器">
Python的不同解释器
&lt;a class="heading-link" href="#python%e7%9a%84%e4%b8%8d%e5%90%8c%e8%a7%a3%e9%87%8a%e5%99%a8">
&lt;i class="fa fa-link" aria-hidden="true">&lt;/i>
&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>CPython&lt;/strong>&lt;/p>
&lt;p>这是自带的用C语言开发的解释器，因此叫CPython。它也是使用最广的Python解释器。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>IPython&lt;/strong>&lt;/p>
&lt;p>这是基于CPython之上的一个交互式解释器，只是相比于CPython多了交互上的优化。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>PyPy&lt;/strong>&lt;/p>
&lt;p>它的目标是执行速度。PyPy采用&lt;a href="http://en.wikipedia.org/wiki/Just-in-time_compilation">JIT技术&lt;/a>，对Python代码进行动态编译（注意不是解释），所以可以显著提高Python代码的执行速度。他与CPython略有不同。&lt;/p>
&lt;/li>
&lt;/ol></description></item></channel></rss>