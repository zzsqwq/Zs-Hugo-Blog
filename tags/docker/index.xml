<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on Zs's Blog</title><link>https://blog.zzsqwq.cn/tags/docker/</link><description>Recent content in Docker on Zs's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 24 Apr 2022 13:46:00 +0000</lastBuildDate><atom:link href="https://blog.zzsqwq.cn/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker-Gitlab 与主机共用 ssh 的 22 端口</title><link>https://blog.zzsqwq.cn/posts/docker-gitlab-ssh/</link><pubDate>Sun, 24 Apr 2022 13:46:00 +0000</pubDate><guid>https://blog.zzsqwq.cn/posts/docker-gitlab-ssh/</guid><description>背景 Link to heading 在使用 Docker 搭建 Gitlab/Gitee 会导致无法与主机端共用 22 端口，这导致 ssh 连接的时候会使用形如 ssh://git@git.xxxx.cn:4022/zs/zsblog.git 的 ssh 链接，而不是像官方 Gitlab 那种非常干净的 git@git.xxxx.cn/zs/zsblog.git 链接。这对于我这种强迫症而言非常的难受啊，但因为主机的 22 端口已经被占用了，无法共用，所以需要考虑两者共享端口的问题。
虽说是两者共用，但其实还是使用类似于端口转发的特点，简单说就是在主机设置 git 用户，然后通过一个脚本将 git 用户的所有 ssh 流量转发到 Gitlab 容器中，从而完成对应的事情。
关于 Gitee 的设置，Gitee 官方的 Docker 部署教程1已经说的很清楚了，按照该步骤执行完全没问题。
而关于 Gitlab 貌似没有比较详尽的教程，搜索后发现了一个 Issue2 以及一篇博文3，后者讲的比较清楚，但是经过实践后发现存在一定问题，因此决定将可行的方案记录下来。
具体步骤 Link to heading 一、初始设置 Link to heading 在开始之前，docker-compose.yml 中设置比较关键的几个配置如下：
gitlab-web: image: &amp;#39;gitlab/gitlab-ce:latest&amp;#39; container_name: &amp;#39;gitlab&amp;#39; restart: always environment: GITLAB_OMNIBUS_CONFIG: | gitlab_rails[&amp;#39;gitlab_shell_ssh_port&amp;#39;] = 4022 ports: - &amp;#39;3090:80&amp;#39; - &amp;#39;4022:22&amp;#39; - &amp;#39;6060:6060&amp;#39; volumes: - &amp;#39;/srv/gitlab/config:/etc/gitlab&amp;#39; - &amp;#39;/srv/gitlab/logs:/var/log/gitlab&amp;#39; - &amp;#39;/srv/gitlab/data:/var/opt/gitlab&amp;#39; - .</description></item></channel></rss>