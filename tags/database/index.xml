<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Database on Zs's Blog</title><link>https://www.zzsqwq.cn/tags/database/</link><description>Recent content in Database on Zs's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 11 Sep 2020 00:08:00 +0000</lastBuildDate><atom:link href="https://www.zzsqwq.cn/tags/database/index.xml" rel="self" type="application/rss+xml"/><item><title>数据库的一些基础知识总结</title><link>https://www.zzsqwq.cn/posts/107/</link><pubDate>Fri, 11 Sep 2020 00:08:00 +0000</pubDate><guid>https://www.zzsqwq.cn/posts/107/</guid><description>&lt;h1 id="了解sql">
了解SQL
&lt;a class="heading-link" href="#%e4%ba%86%e8%a7%a3sql">
&lt;i class="fa fa-link" aria-hidden="true">&lt;/i>
&lt;/a>
&lt;/h1>
&lt;h2 id="一什么是sql">
一.什么是SQL
&lt;a class="heading-link" href="#%e4%b8%80%e4%bb%80%e4%b9%88%e6%98%afsql">
&lt;i class="fa fa-link" aria-hidden="true">&lt;/i>
&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>&lt;strong>SQL&lt;/strong>是结构化查询语言（Structured Query Language）的缩写。是一种专门用来与数据库通信的语言。&lt;/p>
&lt;/blockquote>
&lt;h2 id="二什么是数据库">
二.什么是数据库？
&lt;a class="heading-link" href="#%e4%ba%8c%e4%bb%80%e4%b9%88%e6%98%af%e6%95%b0%e6%8d%ae%e5%ba%93">
&lt;i class="fa fa-link" aria-hidden="true">&lt;/i>
&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>数据库（Database）：保存有组织的数据的容器（通常是一个文件或一组文件）。
​[scode type = &amp;ldquo;yellow&amp;rdquo;]需要注意的是，有时候我们把数据库软件也简称为数据库，但是数据库软件和数据库有本质区别，数据库软件应称为DBMS（数据库管理系统），我们通过数据库软件对数据库进行删减等操作，他代替你操作和访问数据库。[/scode]&lt;/p>
&lt;/blockquote>
&lt;h2 id="三数据库的组成">
三.数据库的组成
&lt;a class="heading-link" href="#%e4%b8%89%e6%95%b0%e6%8d%ae%e5%ba%93%e7%9a%84%e7%bb%84%e6%88%90">
&lt;i class="fa fa-link" aria-hidden="true">&lt;/i>
&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>表&lt;/strong>&lt;/p>
&lt;p>数据库中通常有多张表，这类似于一个清单。就好像我们管理两个班级就可以用两个表单。&lt;/p>
&lt;p>表单之间用表名区分，在同一个数据库中不能有两个具有相同表名的表单。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>行（又称记录）&lt;/strong>&lt;/p>
&lt;p>在表中可以有很多行，我们可以把表看成一个二维数组。每一行代表了一个成员。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>列&lt;/strong>&lt;/p>
&lt;p>每一行有好多列，一列可以代表着成员的一个属性，例如id，班级，姓名等等······&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>数据类型&lt;/strong>&lt;/p>
&lt;p>每一列都有着特定的数据类型，例如字符串和数字就是两种不同的数据类型。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>主键（primary key）&lt;/strong>&lt;/p>
&lt;p>对于表中的每一行，我们都有一个唯一标识他的记号，这称作他的主键。&lt;/p>
&lt;p>可以发现，主键有以下特征：1.每一行都必须有一个主键，不能为空。2.不同行的主键不同。&lt;/p>
&lt;p>我们可以用多列作为主键，这样只需要确保多列组合起来的标识是唯一的。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>外键（foreign key）&lt;/strong>&lt;/p>
&lt;p>外键为某个表中的一列，它包含另一个表的主键值，定义了两个表之间的值，通过&lt;strong>DBMS&lt;/strong>的操作可以将两个表联结起来。&lt;/p>
&lt;p>通俗点讲，好比有两张表，分别存储了所有供应商的信息，和所有产品的信息，在前面那张表定义了每个供应商的id，作为其主键。然后我们为每个产品定义外键的id，填上对应供应商的id，然后通过连结，我们就能知道每个产品供应商的详细信息了。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>可伸缩性（scale）&lt;/strong>&lt;/p>
&lt;p>能够适应不断增加的工作量而不失败。设计良好的数据库或应用程序称之为&lt;strong>可伸缩性好（scale well）&lt;/strong>。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="四数据库的连结">
四.数据库的连结
&lt;a class="heading-link" href="#%e5%9b%9b%e6%95%b0%e6%8d%ae%e5%ba%93%e7%9a%84%e8%bf%9e%e7%bb%93">
&lt;i class="fa fa-link" aria-hidden="true">&lt;/i>
&lt;/a>
&lt;/h2>
&lt;p>​在上面我们讲外键的时候有讲到联结，连结的意思大概就是把多个表，根据一些命令串在一起。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>等值连结（内部连结）&lt;/strong>&lt;/p>
&lt;p>顾名思义，等值连结就是通过两个表之间元素值的相同来把两个表连结起来。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>自联结&lt;/strong>&lt;/p>
&lt;p>这个用于查找在同一表中某一特性相同的所有成员。有的时候自联结要比子查询快很多。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>自然联结&lt;/strong>&lt;/p>
&lt;p>在自然联结中，排除相同的列多次出现，使每个列只返回一次。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>外部联结&lt;/strong>&lt;/p>
&lt;p>联结包含了那些在相关表中没有关联行的行。这种类型的联结称为外部连结。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="五数据库设计范式">
五.数据库设计范式
&lt;a class="heading-link" href="#%e4%ba%94%e6%95%b0%e6%8d%ae%e5%ba%93%e8%ae%be%e8%ae%a1%e8%8c%83%e5%bc%8f">
&lt;i class="fa fa-link" aria-hidden="true">&lt;/i>
&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>范式：当一个关系中的所有分类都是不可再分的数据项时，该关系是规范化的。不可再分的数据项，即不存在组合数据项和多项数据项。一个低一级的关系模式，通过模式分解可以转换为若干高一级范式的关系模式的集合，这个过程就叫规范化。&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>第一范式&lt;/strong>：当关系模式R的所有属性都不能在分解为更基本的数据单位时，称R是满足第一范式的，简记为1NF。满足第一范式是关系模式规范化的最低要求，否则，将有很多基本操作在这样的关系模式中实现不了。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>第二范式&lt;/strong>：如果关系模式R满足第一范式，并且R得所有非主属性都完全依赖于R的每一个候选关键属性，称R满足第二范式，简记为2NF。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>第三范式&lt;/strong>：设R是一个满足第一范式条件的关系模式，X是R的任意属性集，如果X非传递依赖于R的任意一个候选关键字，称R满足第三范式，简记为3NF。&lt;/p>
&lt;p>用我们学长的一句话，范式不是必须满足的，但是我们尽量按照范式来设计数据库，毕竟这是这么多程序员实战经验总结出来的。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="参考链接">
参考链接
&lt;a class="heading-link" href="#%e5%8f%82%e8%80%83%e9%93%be%e6%8e%a5">
&lt;i class="fa fa-link" aria-hidden="true">&lt;/i>
&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://blog.csdn.net/dosthing/article/details/87954213">数据库设计三大范式_dosthing&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cnblogs.com/knowledgesea/p/3667395.html">数据库设计三大范式_张龙豪&lt;/a>&lt;/li>
&lt;li>mysql必知必会&lt;/li>
&lt;/ul></description></item></channel></rss>